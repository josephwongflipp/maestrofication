/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package maestro.payloads;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Merchant extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Merchant\",\"namespace\":\"maestro.payloads\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.payloads.Merchant\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"merchant_logo_url\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public CharSequence type;
  @Deprecated public int id;
  @Deprecated public CharSequence name;
  @Deprecated public CharSequence merchant_logo_url;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Merchant() {}

  /**
   * All-args constructor.
   */
  public Merchant(CharSequence type, Integer id, CharSequence name, CharSequence merchant_logo_url) {
    this.type = type;
    this.id = id;
    this.name = name;
    this.merchant_logo_url = merchant_logo_url;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return id;
    case 2: return name;
    case 3: return merchant_logo_url;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: type = (CharSequence)value$; break;
    case 1: id = (Integer)value$; break;
    case 2: name = (CharSequence)value$; break;
    case 3: merchant_logo_url = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   */
  public CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'id' field.
   */
  public Integer getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'merchant_logo_url' field.
   */
  public CharSequence getMerchantLogoUrl() {
    return merchant_logo_url;
  }

  /**
   * Sets the value of the 'merchant_logo_url' field.
   * @param value the value to set.
   */
  public void setMerchantLogoUrl(CharSequence value) {
    this.merchant_logo_url = value;
  }

  /** Creates a new Merchant RecordBuilder */
  public static maestro.payloads.Merchant.Builder newBuilder() {
    return new maestro.payloads.Merchant.Builder();
  }

  /** Creates a new Merchant RecordBuilder by copying an existing Builder */
  public static maestro.payloads.Merchant.Builder newBuilder(maestro.payloads.Merchant.Builder other) {
    return new maestro.payloads.Merchant.Builder(other);
  }

  /** Creates a new Merchant RecordBuilder by copying an existing Merchant instance */
  public static maestro.payloads.Merchant.Builder newBuilder(maestro.payloads.Merchant other) {
    return new maestro.payloads.Merchant.Builder(other);
  }

  /**
   * RecordBuilder for Merchant instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Merchant>
    implements org.apache.avro.data.RecordBuilder<Merchant> {

    private CharSequence type;
    private int id;
    private CharSequence name;
    private CharSequence merchant_logo_url;

    /** Creates a new Builder */
    private Builder() {
      super(maestro.payloads.Merchant.SCHEMA$);
    }

    /** Creates a Builder by copying an existing Builder */
    private Builder(maestro.payloads.Merchant.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.merchant_logo_url)) {
        this.merchant_logo_url = data().deepCopy(fields()[3].schema(), other.merchant_logo_url);
        fieldSetFlags()[3] = true;
      }
    }

    /** Creates a Builder by copying an existing Merchant instance */
    private Builder(maestro.payloads.Merchant other) {
            super(maestro.payloads.Merchant.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.merchant_logo_url)) {
        this.merchant_logo_url = data().deepCopy(fields()[3].schema(), other.merchant_logo_url);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public CharSequence getType() {
      return type;
    }

    /** Sets the value of the 'type' field */
    public maestro.payloads.Merchant.Builder setType(CharSequence value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }

    /** Clears the value of the 'type' field */
    public maestro.payloads.Merchant.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'id' field */
    public Integer getId() {
      return id;
    }

    /** Sets the value of the 'id' field */
    public maestro.payloads.Merchant.Builder setId(int value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }

    /** Clears the value of the 'id' field */
    public maestro.payloads.Merchant.Builder clearId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public CharSequence getName() {
      return name;
    }

    /** Sets the value of the 'name' field */
    public maestro.payloads.Merchant.Builder setName(CharSequence value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }

    /** Clears the value of the 'name' field */
    public maestro.payloads.Merchant.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'merchant_logo_url' field */
    public CharSequence getMerchantLogoUrl() {
      return merchant_logo_url;
    }

    /** Sets the value of the 'merchant_logo_url' field */
    public maestro.payloads.Merchant.Builder setMerchantLogoUrl(CharSequence value) {
      validate(fields()[3], value);
      this.merchant_logo_url = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /** Checks whether the 'merchant_logo_url' field has been set */
    public boolean hasMerchantLogoUrl() {
      return fieldSetFlags()[3];
    }

    /** Clears the value of the 'merchant_logo_url' field */
    public maestro.payloads.Merchant.Builder clearMerchantLogoUrl() {
      merchant_logo_url = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Merchant build() {
      try {
        Merchant record = new Merchant();
        record.type = fieldSetFlags()[0] ? this.type : (CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (Integer) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (CharSequence) defaultValue(fields()[2]);
        record.merchant_logo_url = fieldSetFlags()[3] ? this.merchant_logo_url : (CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
