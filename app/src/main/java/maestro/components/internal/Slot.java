/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package maestro.components.internal;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Slot extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Slot\",\"namespace\":\"maestro.components.internal\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.internal.Slot\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"component\",\"type\":[{\"type\":\"record\",\"name\":\"PremiumCollection\",\"namespace\":\"maestro.components\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.PremiumCollection\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"components\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"PremiumFlyer\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.PremiumFlyer\"},{\"name\":\"flyer_id\",\"type\":\"int\"},{\"name\":\"auction\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Auction\",\"namespace\":\"maestro.common\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.common.Auction\"},{\"name\":\"auction_uuid\",\"type\":\"string\"}]}],\"default\":null},{\"name\":\"budget\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Budget\",\"namespace\":\"maestro.common\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.common.Budget\"},{\"name\":\"budget_id\",\"type\":\"int\"},{\"name\":\"cost_model_type\",\"type\":\"string\"}]}],\"default\":null}]},{\"type\":\"record\",\"name\":\"WebPromo\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.WebPromo\"},{\"name\":\"web_promo_id\",\"type\":\"int\"}]}]}}]},{\"type\":\"record\",\"name\":\"FlyerCarousel\",\"namespace\":\"maestro.components\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.FlyerCarousel\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"flyers\",\"type\":{\"type\":\"array\",\"items\":[\"PremiumFlyer\",{\"type\":\"record\",\"name\":\"OrganicFlyer\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.OrganicFlyer\"},{\"name\":\"flyer_id\",\"type\":\"int\"},{\"name\":\"auction\",\"type\":[\"null\",\"maestro.common.Auction\"],\"default\":null},{\"name\":\"budget\",\"type\":[\"null\",\"maestro.common.Budget\"],\"default\":null}]}]}}]},{\"type\":\"record\",\"name\":\"FavouritesCarousel\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.internal.FavouritesCarousel\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"flyers\",\"type\":{\"type\":\"array\",\"items\":[\"maestro.components.PremiumFlyer\",\"maestro.components.OrganicFlyer\"]}}]},{\"type\":\"record\",\"name\":\"FlyerStackCarousel\",\"namespace\":\"maestro.components\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.FlyerStackCarousel\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"flyers\",\"type\":{\"type\":\"array\",\"items\":[\"PremiumFlyer\",\"OrganicFlyer\"]}},{\"name\":\"flyer_stack_id\",\"type\":\"long\"},{\"name\":\"use_stack_affinities\",\"type\":\"boolean\"}],\"aliases\":[\"maestro.components.internal.FlyerStackCarousel\"]},{\"type\":\"record\",\"name\":\"NearbyCarousel\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.internal.NearbyCarousel\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"flyers\",\"type\":{\"type\":\"array\",\"items\":[\"maestro.components.PremiumFlyer\",\"maestro.components.OrganicFlyer\"]}}]},{\"type\":\"record\",\"name\":\"RecentlyViewedCarousel\",\"namespace\":\"maestro.components\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.RecentlyViewedCarousel\"},{\"name\":\"name\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"WildCard\",\"namespace\":\"maestro.components\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.WildCard\"}]},{\"type\":\"record\",\"name\":\"Banner\",\"namespace\":\"maestro.components\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.Banner\"},{\"name\":\"image_url\",\"type\":\"string\"},{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"link\",\"type\":[\"null\",\"string\"],\"default\":null}]},{\"type\":\"record\",\"name\":\"ItemHighlights\",\"namespace\":\"maestro.components\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.ItemHighlights\"},{\"name\":\"background_image_url\",\"type\":\"string\"},{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"carousel\",\"type\":{\"type\":\"record\",\"name\":\"FlyerItemCarousel\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.FlyerItemCarousel\"},{\"name\":\"title\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"items\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FlyerItem\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.FlyerItem\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"flyer_id\",\"type\":\"int\"}]}}}]}}]},{\"type\":\"record\",\"name\":\"NumberedList\",\"namespace\":\"maestro.components\",\"fields\":[{\"name\":\"title\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"items\",\"type\":{\"type\":\"array\",\"items\":\"FlyerItem\"}}]},{\"type\":\"record\",\"name\":\"ItemCollection\",\"namespace\":\"maestro.components\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.ItemCollection\"},{\"name\":\"title\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"items\",\"type\":{\"type\":\"array\",\"items\":\"FlyerItem\"}}]}]},{\"name\":\"capabilities\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"SlotCapability\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.internal.SlotCapability\"},{\"name\":\"component\",\"type\":[\"maestro.components.PremiumCollection\",\"maestro.components.FlyerCarousel\",\"FavouritesCarousel\",\"maestro.components.FlyerStackCarousel\",\"NearbyCarousel\",\"maestro.components.RecentlyViewedCarousel\",\"maestro.components.WildCard\",\"maestro.components.Banner\",\"maestro.components.ItemHighlights\",\"maestro.components.NumberedList\",\"maestro.components.ItemCollection\"]},{\"name\":\"affinity\",\"type\":\"float\"},{\"name\":\"unique_by_component_type\",\"type\":\"boolean\"},{\"name\":\"unique_by_fields\",\"type\":\"boolean\"},{\"name\":\"reason_code\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"reason\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"selected\",\"type\":\"boolean\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public CharSequence type;
  @Deprecated public CharSequence id;
  @Deprecated public Object component;
  @Deprecated public java.util.List<maestro.components.internal.SlotCapability> capabilities;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Slot() {}

  /**
   * All-args constructor.
   */
  public Slot(CharSequence type, CharSequence id, Object component, java.util.List<maestro.components.internal.SlotCapability> capabilities) {
    this.type = type;
    this.id = id;
    this.component = component;
    this.capabilities = capabilities;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return id;
    case 2: return component;
    case 3: return capabilities;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: type = (CharSequence)value$; break;
    case 1: id = (CharSequence)value$; break;
    case 2: component = (Object)value$; break;
    case 3: capabilities = (java.util.List<maestro.components.internal.SlotCapability>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   */
  public CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'id' field.
   */
  public CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'component' field.
   */
  public Object getComponent() {
    return component;
  }

  /**
   * Sets the value of the 'component' field.
   * @param value the value to set.
   */
  public void setComponent(Object value) {
    this.component = value;
  }

  /**
   * Gets the value of the 'capabilities' field.
   */
  public java.util.List<maestro.components.internal.SlotCapability> getCapabilities() {
    return capabilities;
  }

  /**
   * Sets the value of the 'capabilities' field.
   * @param value the value to set.
   */
  public void setCapabilities(java.util.List<maestro.components.internal.SlotCapability> value) {
    this.capabilities = value;
  }

  /** Creates a new Slot RecordBuilder */
  public static maestro.components.internal.Slot.Builder newBuilder() {
    return new maestro.components.internal.Slot.Builder();
  }

  /** Creates a new Slot RecordBuilder by copying an existing Builder */
  public static maestro.components.internal.Slot.Builder newBuilder(maestro.components.internal.Slot.Builder other) {
    return new maestro.components.internal.Slot.Builder(other);
  }

  /** Creates a new Slot RecordBuilder by copying an existing Slot instance */
  public static maestro.components.internal.Slot.Builder newBuilder(maestro.components.internal.Slot other) {
    return new maestro.components.internal.Slot.Builder(other);
  }

  /**
   * RecordBuilder for Slot instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Slot>
    implements org.apache.avro.data.RecordBuilder<Slot> {

    private CharSequence type;
    private CharSequence id;
    private Object component;
    private java.util.List<maestro.components.internal.SlotCapability> capabilities;

    /** Creates a new Builder */
    private Builder() {
      super(maestro.components.internal.Slot.SCHEMA$);
    }

    /** Creates a Builder by copying an existing Builder */
    private Builder(maestro.components.internal.Slot.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.component)) {
        this.component = data().deepCopy(fields()[2].schema(), other.component);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.capabilities)) {
        this.capabilities = data().deepCopy(fields()[3].schema(), other.capabilities);
        fieldSetFlags()[3] = true;
      }
    }

    /** Creates a Builder by copying an existing Slot instance */
    private Builder(maestro.components.internal.Slot other) {
            super(maestro.components.internal.Slot.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.component)) {
        this.component = data().deepCopy(fields()[2].schema(), other.component);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.capabilities)) {
        this.capabilities = data().deepCopy(fields()[3].schema(), other.capabilities);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public CharSequence getType() {
      return type;
    }

    /** Sets the value of the 'type' field */
    public maestro.components.internal.Slot.Builder setType(CharSequence value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }

    /** Clears the value of the 'type' field */
    public maestro.components.internal.Slot.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'id' field */
    public CharSequence getId() {
      return id;
    }

    /** Sets the value of the 'id' field */
    public maestro.components.internal.Slot.Builder setId(CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }

    /** Clears the value of the 'id' field */
    public maestro.components.internal.Slot.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'component' field */
    public Object getComponent() {
      return component;
    }

    /** Sets the value of the 'component' field */
    public maestro.components.internal.Slot.Builder setComponent(Object value) {
      validate(fields()[2], value);
      this.component = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /** Checks whether the 'component' field has been set */
    public boolean hasComponent() {
      return fieldSetFlags()[2];
    }

    /** Clears the value of the 'component' field */
    public maestro.components.internal.Slot.Builder clearComponent() {
      component = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'capabilities' field */
    public java.util.List<maestro.components.internal.SlotCapability> getCapabilities() {
      return capabilities;
    }

    /** Sets the value of the 'capabilities' field */
    public maestro.components.internal.Slot.Builder setCapabilities(java.util.List<maestro.components.internal.SlotCapability> value) {
      validate(fields()[3], value);
      this.capabilities = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /** Checks whether the 'capabilities' field has been set */
    public boolean hasCapabilities() {
      return fieldSetFlags()[3];
    }

    /** Clears the value of the 'capabilities' field */
    public maestro.components.internal.Slot.Builder clearCapabilities() {
      capabilities = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Slot build() {
      try {
        Slot record = new Slot();
        record.type = fieldSetFlags()[0] ? this.type : (CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (CharSequence) defaultValue(fields()[1]);
        record.component = fieldSetFlags()[2] ? this.component : (Object) defaultValue(fields()[2]);
        record.capabilities = fieldSetFlags()[3] ? this.capabilities : (java.util.List<maestro.components.internal.SlotCapability>) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
