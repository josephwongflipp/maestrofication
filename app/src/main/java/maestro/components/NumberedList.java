/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package maestro.components;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class NumberedList extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NumberedList\",\"namespace\":\"maestro.components\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.NumberedList\"},{\"name\":\"title\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"items\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FlyerItem\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.FlyerItem\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"flyer_id\",\"type\":\"int\"},{\"name\":\"style\",\"type\":[\"null\",\"string\"],\"default\":null}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public CharSequence type;
  @Deprecated public CharSequence title;
  @Deprecated public java.util.List<maestro.components.FlyerItem> items;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public NumberedList() {}

  /**
   * All-args constructor.
   */
  public NumberedList(CharSequence type, CharSequence title, java.util.List<maestro.components.FlyerItem> items) {
    this.type = type;
    this.title = title;
    this.items = items;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return title;
    case 2: return items;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: type = (CharSequence)value$; break;
    case 1: title = (CharSequence)value$; break;
    case 2: items = (java.util.List<maestro.components.FlyerItem>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   */
  public CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'title' field.
   */
  public CharSequence getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(CharSequence value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'items' field.
   */
  public java.util.List<maestro.components.FlyerItem> getItems() {
    return items;
  }

  /**
   * Sets the value of the 'items' field.
   * @param value the value to set.
   */
  public void setItems(java.util.List<maestro.components.FlyerItem> value) {
    this.items = value;
  }

  /** Creates a new NumberedList RecordBuilder */
  public static maestro.components.NumberedList.Builder newBuilder() {
    return new maestro.components.NumberedList.Builder();
  }

  /** Creates a new NumberedList RecordBuilder by copying an existing Builder */
  public static maestro.components.NumberedList.Builder newBuilder(maestro.components.NumberedList.Builder other) {
    return new maestro.components.NumberedList.Builder(other);
  }

  /** Creates a new NumberedList RecordBuilder by copying an existing NumberedList instance */
  public static maestro.components.NumberedList.Builder newBuilder(maestro.components.NumberedList other) {
    return new maestro.components.NumberedList.Builder(other);
  }

  /**
   * RecordBuilder for NumberedList instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NumberedList>
    implements org.apache.avro.data.RecordBuilder<NumberedList> {

    private CharSequence type;
    private CharSequence title;
    private java.util.List<maestro.components.FlyerItem> items;

    /** Creates a new Builder */
    private Builder() {
      super(maestro.components.NumberedList.SCHEMA$);
    }

    /** Creates a Builder by copying an existing Builder */
    private Builder(maestro.components.NumberedList.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.title)) {
        this.title = data().deepCopy(fields()[1].schema(), other.title);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.items)) {
        this.items = data().deepCopy(fields()[2].schema(), other.items);
        fieldSetFlags()[2] = true;
      }
    }

    /** Creates a Builder by copying an existing NumberedList instance */
    private Builder(maestro.components.NumberedList other) {
            super(maestro.components.NumberedList.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.title)) {
        this.title = data().deepCopy(fields()[1].schema(), other.title);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.items)) {
        this.items = data().deepCopy(fields()[2].schema(), other.items);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public CharSequence getType() {
      return type;
    }

    /** Sets the value of the 'type' field */
    public maestro.components.NumberedList.Builder setType(CharSequence value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }

    /** Clears the value of the 'type' field */
    public maestro.components.NumberedList.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'title' field */
    public CharSequence getTitle() {
      return title;
    }

    /** Sets the value of the 'title' field */
    public maestro.components.NumberedList.Builder setTitle(CharSequence value) {
      validate(fields()[1], value);
      this.title = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /** Checks whether the 'title' field has been set */
    public boolean hasTitle() {
      return fieldSetFlags()[1];
    }

    /** Clears the value of the 'title' field */
    public maestro.components.NumberedList.Builder clearTitle() {
      title = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'items' field */
    public java.util.List<maestro.components.FlyerItem> getItems() {
      return items;
    }

    /** Sets the value of the 'items' field */
    public maestro.components.NumberedList.Builder setItems(java.util.List<maestro.components.FlyerItem> value) {
      validate(fields()[2], value);
      this.items = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /** Checks whether the 'items' field has been set */
    public boolean hasItems() {
      return fieldSetFlags()[2];
    }

    /** Clears the value of the 'items' field */
    public maestro.components.NumberedList.Builder clearItems() {
      items = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public NumberedList build() {
      try {
        NumberedList record = new NumberedList();
        record.type = fieldSetFlags()[0] ? this.type : (CharSequence) defaultValue(fields()[0]);
        record.title = fieldSetFlags()[1] ? this.title : (CharSequence) defaultValue(fields()[1]);
        record.items = fieldSetFlags()[2] ? this.items : (java.util.List<maestro.components.FlyerItem>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
