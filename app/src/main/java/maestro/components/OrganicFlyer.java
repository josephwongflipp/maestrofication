/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package maestro.components;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OrganicFlyer extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrganicFlyer\",\"namespace\":\"maestro.components\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.components.OrganicFlyer\"},{\"name\":\"flyer_id\",\"type\":\"int\"},{\"name\":\"auction\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Auction\",\"namespace\":\"maestro.common\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.common.Auction\"},{\"name\":\"auction_uuid\",\"type\":\"string\"}]}],\"default\":null},{\"name\":\"budget\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Budget\",\"namespace\":\"maestro.common\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.common.Budget\"},{\"name\":\"budget_id\",\"type\":\"int\"},{\"name\":\"cost_model_type\",\"type\":\"string\"}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public CharSequence type;
  @Deprecated public int flyer_id;
  @Deprecated public maestro.common.Auction auction;
  @Deprecated public maestro.common.Budget budget;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrganicFlyer() {}

  /**
   * All-args constructor.
   */
  public OrganicFlyer(CharSequence type, Integer flyer_id, maestro.common.Auction auction, maestro.common.Budget budget) {
    this.type = type;
    this.flyer_id = flyer_id;
    this.auction = auction;
    this.budget = budget;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return flyer_id;
    case 2: return auction;
    case 3: return budget;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: type = (CharSequence)value$; break;
    case 1: flyer_id = (Integer)value$; break;
    case 2: auction = (maestro.common.Auction)value$; break;
    case 3: budget = (maestro.common.Budget)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   */
  public CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'flyer_id' field.
   */
  public Integer getFlyerId() {
    return flyer_id;
  }

  /**
   * Sets the value of the 'flyer_id' field.
   * @param value the value to set.
   */
  public void setFlyerId(Integer value) {
    this.flyer_id = value;
  }

  /**
   * Gets the value of the 'auction' field.
   */
  public maestro.common.Auction getAuction() {
    return auction;
  }

  /**
   * Sets the value of the 'auction' field.
   * @param value the value to set.
   */
  public void setAuction(maestro.common.Auction value) {
    this.auction = value;
  }

  /**
   * Gets the value of the 'budget' field.
   */
  public maestro.common.Budget getBudget() {
    return budget;
  }

  /**
   * Sets the value of the 'budget' field.
   * @param value the value to set.
   */
  public void setBudget(maestro.common.Budget value) {
    this.budget = value;
  }

  /** Creates a new OrganicFlyer RecordBuilder */
  public static maestro.components.OrganicFlyer.Builder newBuilder() {
    return new maestro.components.OrganicFlyer.Builder();
  }

  /** Creates a new OrganicFlyer RecordBuilder by copying an existing Builder */
  public static maestro.components.OrganicFlyer.Builder newBuilder(maestro.components.OrganicFlyer.Builder other) {
    return new maestro.components.OrganicFlyer.Builder(other);
  }

  /** Creates a new OrganicFlyer RecordBuilder by copying an existing OrganicFlyer instance */
  public static maestro.components.OrganicFlyer.Builder newBuilder(maestro.components.OrganicFlyer other) {
    return new maestro.components.OrganicFlyer.Builder(other);
  }

  /**
   * RecordBuilder for OrganicFlyer instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrganicFlyer>
    implements org.apache.avro.data.RecordBuilder<OrganicFlyer> {

    private CharSequence type;
    private int flyer_id;
    private maestro.common.Auction auction;
    private maestro.common.Budget budget;

    /** Creates a new Builder */
    private Builder() {
      super(maestro.components.OrganicFlyer.SCHEMA$);
    }

    /** Creates a Builder by copying an existing Builder */
    private Builder(maestro.components.OrganicFlyer.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.flyer_id)) {
        this.flyer_id = data().deepCopy(fields()[1].schema(), other.flyer_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.auction)) {
        this.auction = data().deepCopy(fields()[2].schema(), other.auction);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.budget)) {
        this.budget = data().deepCopy(fields()[3].schema(), other.budget);
        fieldSetFlags()[3] = true;
      }
    }

    /** Creates a Builder by copying an existing OrganicFlyer instance */
    private Builder(maestro.components.OrganicFlyer other) {
            super(maestro.components.OrganicFlyer.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.flyer_id)) {
        this.flyer_id = data().deepCopy(fields()[1].schema(), other.flyer_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.auction)) {
        this.auction = data().deepCopy(fields()[2].schema(), other.auction);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.budget)) {
        this.budget = data().deepCopy(fields()[3].schema(), other.budget);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public CharSequence getType() {
      return type;
    }

    /** Sets the value of the 'type' field */
    public maestro.components.OrganicFlyer.Builder setType(CharSequence value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }

    /** Clears the value of the 'type' field */
    public maestro.components.OrganicFlyer.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'flyer_id' field */
    public Integer getFlyerId() {
      return flyer_id;
    }

    /** Sets the value of the 'flyer_id' field */
    public maestro.components.OrganicFlyer.Builder setFlyerId(int value) {
      validate(fields()[1], value);
      this.flyer_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /** Checks whether the 'flyer_id' field has been set */
    public boolean hasFlyerId() {
      return fieldSetFlags()[1];
    }

    /** Clears the value of the 'flyer_id' field */
    public maestro.components.OrganicFlyer.Builder clearFlyerId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'auction' field */
    public maestro.common.Auction getAuction() {
      return auction;
    }

    /** Sets the value of the 'auction' field */
    public maestro.components.OrganicFlyer.Builder setAuction(maestro.common.Auction value) {
      validate(fields()[2], value);
      this.auction = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /** Checks whether the 'auction' field has been set */
    public boolean hasAuction() {
      return fieldSetFlags()[2];
    }

    /** Clears the value of the 'auction' field */
    public maestro.components.OrganicFlyer.Builder clearAuction() {
      auction = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'budget' field */
    public maestro.common.Budget getBudget() {
      return budget;
    }

    /** Sets the value of the 'budget' field */
    public maestro.components.OrganicFlyer.Builder setBudget(maestro.common.Budget value) {
      validate(fields()[3], value);
      this.budget = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /** Checks whether the 'budget' field has been set */
    public boolean hasBudget() {
      return fieldSetFlags()[3];
    }

    /** Clears the value of the 'budget' field */
    public maestro.components.OrganicFlyer.Builder clearBudget() {
      budget = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public OrganicFlyer build() {
      try {
        OrganicFlyer record = new OrganicFlyer();
        record.type = fieldSetFlags()[0] ? this.type : (CharSequence) defaultValue(fields()[0]);
        record.flyer_id = fieldSetFlags()[1] ? this.flyer_id : (Integer) defaultValue(fields()[1]);
        record.auction = fieldSetFlags()[2] ? this.auction : (maestro.common.Auction) defaultValue(fields()[2]);
        record.budget = fieldSetFlags()[3] ? this.budget : (maestro.common.Budget) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
