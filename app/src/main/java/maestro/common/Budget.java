/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package maestro.common;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Budget extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Budget\",\"namespace\":\"maestro.common\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"default\":\"maestro.common.Budget\"},{\"name\":\"budget_id\",\"type\":\"int\"},{\"name\":\"cost_model_type\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public CharSequence type;
  @Deprecated public int budget_id;
  @Deprecated public CharSequence cost_model_type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Budget() {}

  /**
   * All-args constructor.
   */
  public Budget(CharSequence type, Integer budget_id, CharSequence cost_model_type) {
    this.type = type;
    this.budget_id = budget_id;
    this.cost_model_type = cost_model_type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return budget_id;
    case 2: return cost_model_type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: type = (CharSequence)value$; break;
    case 1: budget_id = (Integer)value$; break;
    case 2: cost_model_type = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   */
  public CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'budget_id' field.
   */
  public Integer getBudgetId() {
    return budget_id;
  }

  /**
   * Sets the value of the 'budget_id' field.
   * @param value the value to set.
   */
  public void setBudgetId(Integer value) {
    this.budget_id = value;
  }

  /**
   * Gets the value of the 'cost_model_type' field.
   */
  public CharSequence getCostModelType() {
    return cost_model_type;
  }

  /**
   * Sets the value of the 'cost_model_type' field.
   * @param value the value to set.
   */
  public void setCostModelType(CharSequence value) {
    this.cost_model_type = value;
  }

  /** Creates a new Budget RecordBuilder */
  public static maestro.common.Budget.Builder newBuilder() {
    return new maestro.common.Budget.Builder();
  }

  /** Creates a new Budget RecordBuilder by copying an existing Builder */
  public static maestro.common.Budget.Builder newBuilder(maestro.common.Budget.Builder other) {
    return new maestro.common.Budget.Builder(other);
  }

  /** Creates a new Budget RecordBuilder by copying an existing Budget instance */
  public static maestro.common.Budget.Builder newBuilder(maestro.common.Budget other) {
    return new maestro.common.Budget.Builder(other);
  }

  /**
   * RecordBuilder for Budget instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Budget>
    implements org.apache.avro.data.RecordBuilder<Budget> {

    private CharSequence type;
    private int budget_id;
    private CharSequence cost_model_type;

    /** Creates a new Builder */
    private Builder() {
      super(maestro.common.Budget.SCHEMA$);
    }

    /** Creates a Builder by copying an existing Builder */
    private Builder(maestro.common.Budget.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.budget_id)) {
        this.budget_id = data().deepCopy(fields()[1].schema(), other.budget_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.cost_model_type)) {
        this.cost_model_type = data().deepCopy(fields()[2].schema(), other.cost_model_type);
        fieldSetFlags()[2] = true;
      }
    }

    /** Creates a Builder by copying an existing Budget instance */
    private Builder(maestro.common.Budget other) {
            super(maestro.common.Budget.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.budget_id)) {
        this.budget_id = data().deepCopy(fields()[1].schema(), other.budget_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.cost_model_type)) {
        this.cost_model_type = data().deepCopy(fields()[2].schema(), other.cost_model_type);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public CharSequence getType() {
      return type;
    }

    /** Sets the value of the 'type' field */
    public maestro.common.Budget.Builder setType(CharSequence value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }

    /** Clears the value of the 'type' field */
    public maestro.common.Budget.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'budget_id' field */
    public Integer getBudgetId() {
      return budget_id;
    }

    /** Sets the value of the 'budget_id' field */
    public maestro.common.Budget.Builder setBudgetId(int value) {
      validate(fields()[1], value);
      this.budget_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /** Checks whether the 'budget_id' field has been set */
    public boolean hasBudgetId() {
      return fieldSetFlags()[1];
    }

    /** Clears the value of the 'budget_id' field */
    public maestro.common.Budget.Builder clearBudgetId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'cost_model_type' field */
    public CharSequence getCostModelType() {
      return cost_model_type;
    }

    /** Sets the value of the 'cost_model_type' field */
    public maestro.common.Budget.Builder setCostModelType(CharSequence value) {
      validate(fields()[2], value);
      this.cost_model_type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /** Checks whether the 'cost_model_type' field has been set */
    public boolean hasCostModelType() {
      return fieldSetFlags()[2];
    }

    /** Clears the value of the 'cost_model_type' field */
    public maestro.common.Budget.Builder clearCostModelType() {
      cost_model_type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Budget build() {
      try {
        Budget record = new Budget();
        record.type = fieldSetFlags()[0] ? this.type : (CharSequence) defaultValue(fields()[0]);
        record.budget_id = fieldSetFlags()[1] ? this.budget_id : (Integer) defaultValue(fields()[1]);
        record.cost_model_type = fieldSetFlags()[2] ? this.cost_model_type : (CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
